## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName

image: &image
  registry: docker.io
  repository: dgraph/dgraph
  tag: v23.0.1
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName
  ## Set to true if you would like to see extra information on logs
  ## It turns BASH and NAMI debugging in minideb
  ## ref:  https://github.com/bitnami/minideb-extras/#turn-on-bash-debugging
  ##
  debug: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: dgraph

zero:
  name: zero
  metrics:
    enabled: true

  ## StatefulSet spec.template.metadata.annotations
  extraAnnotations: {}

  ## StatefulSet spec.template.metadata.labels
  podLabels: {}

  monitorLabel: zero-dgraph-io
  ## StatefulSet controller supports automated updates. There are two valid update strategies: RollingUpdate and OnDelete
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
  ##
  updateStrategy: RollingUpdate

  ## Scheduler name
  ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName: stork

  ## Partition update strategy
  ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
  ##
  # rollingUpdatePartition:

  ## StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees. There are two valid pod management policies: OrderedReady and Parallel
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ##
  podManagementPolicy: Parallel

  ## Number of dgraph zero pods
  ##
  replicaCount: 3

  ## Max number of replicas per data shard.
  ## i.e., the max number of Dgraph Alpha instances per group (shard).
  ##
  shardReplicaCount: 5

  ## zero server pod termination grace period
  ##
  terminationGracePeriodSeconds: 60

  ## Hard means that by default pods will only be scheduled if there are enough nodes for them
  ## and that they will never end up on the same node. Setting this to soft will do this "best effort"
  antiAffinity: soft

  ## By default this will make sure two pods don't end up on the same node
  ## Changing this to a region would allow you to spread pods across regions
  podAntiAffinitytopologyKey: "kubernetes.io/hostname"

  ## This is the node affinity settings as defined in
  ## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity-beta-feature
  nodeAffinity: {}

  ## Extra environment variables which will be appended to the env: definition for the container.
  extraEnvs: []

  ## Extra flags for command line flags in command
  extraFlags: ""

  ## Configuration file for dgraph zero used as an alternative to command-line options
  ## Ref: https://dgraph.io/docs/deploy/config/
  configFile: {}

  ## Kubernetes configuration
  ## For minikube, set this to NodePort, elsewhere use LoadBalancer
  ##
  service:
    type: ClusterIP    # All hostnames must be listed for grpc + https ingress shared cert secret

    labels: {}
    annotations: {}
    ## StatefulSet pods will need to have addresses published in order to
    ## communicate to each other in order to enter a ready state.
    publishNotReadyAddresses: true

    ## References:
    ##  * General: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    ##  * GKE: https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balancing#lb_subnet
    ##  * AKS: https://docs.microsoft.com/en-us/azure/aks/ingress-static-ip
    loadBalancerIP: ""

    ## References:
    ## * General: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ## * EKS: https://aws.amazon.com/blogs/opensource/network-load-balancer-support-in-kubernetes-1-9/
    ## * AKS: https://docs.microsoft.com/en-us/azure/aks/load-balancer-standard#maintain-the-clients-ip-on-inbound-connections
    externalTrafficPolicy: ""

    ## References:
    ## * General: https://kubernetes.io/docs/concepts/services-networking/service/#aws-nlb-support
    ## * GKE: https://cloud.google.com/kubernetes-engine/docs/concepts/security-overview#filtering_load_balanced_traffic
    ## * EKS: https://aws.amazon.com/premiumsupport/knowledge-center/eks-cidr-ip-address-loadbalancer/
    ## * AKS: https://docs.microsoft.com/en-us/azure/aks/load-balancer-standard#restrict-inbound-traffic-to-specific-ip-ranges
    loadBalancerSourceRanges: []
  serviceHeadless:
    labels: {}

  ## dgraph Pod Security Context
  securityContext:
    enabled: false
    fsGroup: 1001
    runAsUser: 1001

  ## TLS Configuration
  tls:
    enabled: false
    ## Files created from './tls' directory set with `dgraph cert` command
    ## Can use make_tls_secrets.sh to generate secrets.yaml
    files: {}


  ## dgraph data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  persistence:
    enabled: true
    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 32Gi

  ## Node labels and tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  nodeSelector: {}
  tolerations: []

  ## Configure resource requests
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 100Mi

  ## Configure extra options for startup, liveness and readiness probes.
  ## NOTE: startupProbe only support in Kubernetes v1.16+
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ##
  startupProbe:
    enabled: false
    port: 6080
    path: /health
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  livenessProbe:
    enabled: true
    port: 6080
    path: /health
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    enabled: true
    port: 6080
    path: /state
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  ## Custom liveness and readiness probes
  customStartupProbe: {}
  customLivenessProbe: {}
  customReadinessProbe: {}

alpha:
  name: alpha
  metrics:
    enabled: true

  ## StatefulSet spec.template.metadata.annotations
  extraAnnotations: {}

  ## StatefulSet spec.template.metadata.labels
  podLabels: {}

  monitorLabel: alpha-dgraph-io
  ## StatefulSet controller supports automated updates. There are two valid update strategies: RollingUpdate and OnDelete
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
  ##
  updateStrategy: RollingUpdate

  ## Scheduler name
  ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName: stork

  ## Partition update strategy
  ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
  ##
  # rollingUpdatePartition:

  ## StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees. There are two valid pod management policies: OrderedReady and Parallel
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ##
  podManagementPolicy: Parallel

  ## Number of dgraph nodes
  ##
  replicaCount: 3

  ## alpha server pod termination grace period
  ##
  terminationGracePeriodSeconds: 600

  ## Hard means that by default pods will only be scheduled if there are enough nodes for them
  ## and that they will never end up on the same node. Setting this to soft will do this "best effort"
  antiAffinity: soft

  ## By default this will make sure two pods don't end up on the same node
  ## Changing this to a region would allow you to spread pods across regions
  podAntiAffinitytopologyKey: "kubernetes.io/hostname"

  ## This is the node affinity settings as defined in
  ## https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity-beta-feature
  nodeAffinity: {}

  ## Extra environment variables which will be appended to the env: definition for the container.
  extraEnvs: []
    # - name: AWS_ACCESS_KEY_ID
    #   value: "XXXXXXXXXXXXXXXXXXXX"
    # - name: AWS_SECRET_ACCESS_KEY
    #   value: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

  ## Extra flags for command line flags in command
  extraFlags: ""

  ## Configuration file for dgraph alpha used as an alternative to command-line options
  ## Ref: https://dgraph.io/docs/deploy/config/
  configFile: {}

  ## Kubernetes configuration
  ## For minikube, set this to NodePort, elsewhere use LoadBalancer
  ##
  service:
    type: ClusterIP
    labels: {}
    annotations: {}
    ## StatefulSet pods will need to have addresses published in order to
    ## communicate to each other in order to enter a ready state.
    publishNotReadyAddresses: true

    ## References:
    ##  * General: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    ##  * GKE: https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balancing#lb_subnet
    ##  * AKS: https://docs.microsoft.com/en-us/azure/aks/ingress-static-ip
    loadBalancerIP: ""

    ## References:
    ## * General: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ## * EKS: https://aws.amazon.com/blogs/opensource/network-load-balancer-support-in-kubernetes-1-9/
    ## * AKS: https://docs.microsoft.com/en-us/azure/aks/load-balancer-standard#maintain-the-clients-ip-on-inbound-connections
    externalTrafficPolicy: ""

    ## References:
    ## * General: https://kubernetes.io/docs/concepts/services-networking/service/#aws-nlb-support
    ## * GKE: https://cloud.google.com/kubernetes-engine/docs/concepts/security-overview#filtering_load_balanced_traffic
    ## * EKS: https://aws.amazon.com/premiumsupport/knowledge-center/eks-cidr-ip-address-loadbalancer/
    ## * AKS: https://docs.microsoft.com/en-us/azure/aks/load-balancer-standard#restrict-inbound-traffic-to-specific-ip-ranges
    loadBalancerSourceRanges: []
  serviceHeadless:
    labels: {}
  ## alpha ingress resource configuration
  ## This requires an ingress controller to be installed into your k8s cluster
  ingress:
    enabled: false
    # ingressClassName: nginx
    # hostname: ""
    # annotations: {}
    # tls: {}

  ## alpha GRPC ingress resource configuration
  ## This requires an ingress controller to be installed into your k8s cluster
  ingress_grpc:
    enabled: false
    # ingressClassName: nginx
    # hostname: ""
    # annotations: {}
    # tls: {}

  ## dgraph Pod Security Context
  securityContext:
    enabled: false
    fsGroup: 1001
    runAsUser: 1001

  ## TLS Configuration
  ## Documentation on dgraph alpha TLS options,
  ##  see https://dgraph.io/docs/deploy/security/tls-configuration/#tls-options
  tls:
    enabled: false
    ## Files created from './tls' directory set with `dgraph cert` command
    ## Can use make_tls_secrets.sh to generate secrets.yaml
    files: {}

  ## ACL Configuration
  ## Documentation on Enterprise ACL Feature
  ##  see https://dgraph.io/docs/enterprise-features/access-control-lists/
  acl:
    enabled: false
    ## The values in `file: {}` will be the filename as key and the file data as the value.
    ## Make sure that the filename key matches the dgraph configuration of `acl_secret_file`
    # file:
    #   ## value for 1234567890123456789012345678901
    #   ## Note that Kubernetes secrets must be base64-encoded
    #   hmac_secret_file: MTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMQo=

  ## Encryption at Rest Configuration
  ## Documentation on Enterprise ACL Feature
  ##  see https://dgraph.io/docs/enterprise-features/encryption-at-rest/
  encryption:
    enabled: false
    ## The values in `file: {}` will be the filename as key and the file data as the value.
    ## Make sure that the filename key matches the dgraph configuration of `encryption_key_file`
    # file:
    #   ## value for 123456789012345
    #   ## Note that Kubernetes secrets must be base64-encoded
    #   enc_key_file: MTIzNDU2Nzg5MDEyMzQ1Cg==

  ## dgraph data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  persistence:
    enabled: true
    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 100Gi
    annotations: {}

  ## Node labels and tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  nodeSelector: {}
  tolerations: []

  ## Configure resource requests
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 100Mi

  ## Configure extra options for startup, liveness and readiness probes
  ## NOTE: startupProbe only support in Kubernetes v1.16+
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ##
  startupProbe:
    enabled: false
    port: 8080
    path: /health?live=1
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1

  livenessProbe:
    enabled: true
    port: 8080
    path: /health?live=1
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    enabled: true
    port: 8080
    path: /probe/graphql
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  ## Custom liveness and readiness probes
  customStartupProbe: {}
  customLivenessProbe: {}
  customReadinessProbe: {}
  
  # Enables extra init containers to be added to the alpha statefulset
  extraInitContainers: []

  ## You may want to initialize the Alphas with data before starting Alpha containers.
  ## Examples can include:
  ## * offline data restore from binary backups with `dgraph restore`
  ##   (ref. https://dgraph.io/docs/enterprise-features/binary-backups/#restore-from-backup)
  ## * bulk loader (ref. https://dgraph.io/docs/howto/importdata/bulk-loader/)
  initContainers:
    init:
      enabled: false
      # Adds environment variables for the alpha init container
      env: []
      image:
        << : *image
      command:
        - bash
        - "-c"
        - |
          trap "exit" SIGINT SIGTERM
          echo "Write to /dgraph/doneinit when ready."
          until [ -f /dgraph/doneinit ]; do sleep 2; done

ratel:
  name: ratel
  ## Disable Ratel service
  enabled: false

  ## Deployment spec.template.metadata.annotations
  extraAnnotations: {}

  ## Deployment spec.template.metadata.labels
  podLabels: {}

  ## NOTE: Ratel is no longer included in dgraph image since dgraph/dgraph:v21.03.0
  ##       The Ratel image is dgraph/ratel.
  image:
    registry: docker.io
    repository: dgraph/ratel
    tag: v21.12.0

  ## Scheduler name
  ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName: stork

  ## Number of dgraph nodes
  ##
  replicaCount: 1

  # Extra environment variables which will be appended to the env: definition for the container.
  extraEnvs: []

  # Arguments appended to a command dgraph-ratel command
  args: []

  ## Kubernetes configuration
  ## For minikube, set this to NodePort, elsewhere use ClusterIP or LoadBalancer
  ##
  service:
    type: ClusterIP
    labels: {}
    annotations: {}

    ## References:
    ##  * General: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    ##  * GKE: https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balancing#lb_subnet
    ##  * AKS: https://docs.microsoft.com/en-us/azure/aks/ingress-static-ip
    loadBalancerIP: ""

    ## References:
    ## * General: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ## * EKS: https://aws.amazon.com/blogs/opensource/network-load-balancer-support-in-kubernetes-1-9/
    ## * AKS: https://docs.microsoft.com/en-us/azure/aks/load-balancer-standard#maintain-the-clients-ip-on-inbound-connections
    externalTrafficPolicy: ""

    ## References:
    ## * General: https://kubernetes.io/docs/concepts/services-networking/service/#aws-nlb-support
    ## * GKE: https://cloud.google.com/kubernetes-engine/docs/concepts/security-overview#filtering_load_balanced_traffic
    ## * EKS: https://aws.amazon.com/premiumsupport/knowledge-center/eks-cidr-ip-address-loadbalancer/
    ## * AKS: https://docs.microsoft.com/en-us/azure/aks/load-balancer-standard#restrict-inbound-traffic-to-specific-ip-ranges
    loadBalancerSourceRanges: []

  ## ratel ingress resource configuration
  ## This requires an ingress controller to be installed into your k8s cluster
  ingress:
    enabled: false
    # ingressClassName: nginx
    # hostname: ""
    # annotations: {}
    # tls: {}

  ## dgraph Pod Security Context
  securityContext:
    enabled: false
    fsGroup: 1001
    runAsUser: 1001

  ## Configure resource requests
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  ## resources:
  ##   requests:
  ##     memory: 256Mi
  ##     cpu: 250m

  ## Configure extra options for liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ##
  livenessProbe:
    enabled: false
    port: 8000
    path: /
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    enabled: false
    port: 8000
    path: /
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  ## Custom liveness and readiness probes
  customLivenessProbe: {}
  customReadinessProbe: {}

## Binary Backup CronJob Configuration (Enterprise feature)
## ref: https://dgraph.io/docs/enterprise-features/binary-backups/
##
backups:
  name: backups
  ## Scheduler name
  ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName: stork
  ## CronJob spec.jobTemplate.spec.template.metadata.labels
  podLabels: {}
  admin:
    ## backup user and password that is a member of 'guardians'group used to
    ## login if ACLs are enabled.  This fetches an access token used to trigger backups
    ## ref: https://dgraph.io/docs/enterprise-features/access-control-lists/
    user: groot
    # password: password
    ## Mutual TLS client certficate and key can be used to secure transaction that was created with
    ## dgraph cert --client <name-of-client> should be specified here.
    ## ref. https://dgraph.io/docs/deploy/security/tls-configuration/#tls-options
    tls_client: ""
    ## Authorization Token can be used to secure /login and /admin.  The auth token
    ## string that is set Alpha configuration or environment variable needs to be
    ## specified here so that backups can properly login.
    ## ref. https://dgraph.io/docs/deploy/admin/dgraph-administration/#secure-alter-operations
    auth_token: ""
  ## Backups image - image needs at least curl command
  ## default is to reuse dgraph image
  image:
    << : *image
  ## NFS Configuration for mounting a filepath in Alpha pods
  ## Prerequisites: NFS Server required, e.g. Google Cloud FileStore, EFS, etc.
  ## ref. https://kubernetes.io/docs/concepts/storage/volumes/#nfs
  nfs:
    enabled: false
    server: ""
    path: ""
    storage: 512Gi
    mountPath: &nfs_backups_path /dgraph/backups
  ## Volume Configuration for mounting a filepath in Alpha pods
  ## Prerequisites: PVC must be created beforehand.
  ## On cluster with 2+ alpha pods, RWX (ReadWriteMany) access mode is required.
  ## ref. https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  volume:
    enabled: false
    claim: ""
    mountPath: &vol_backups_path /dgraph/backups/
  full:
    enabled: false
    ## enable bash debugging (set -x)
    debug: false
    ## full backup schedule
    ## 12AM server time
    schedule: "0 0 * * *"
    ## restart policy
    restartPolicy: Never
  incremental:
    enabled: false
    ## enable bash debugging (set -x)
    debug: false
    ## incremental backup schedule
    ## every hour, except 12AM serer time
    schedule: "0 1-23 * * *"
    ## restart policy
    restartPolicy: Never
  ## destination is file path, s3, or minio
  ## examples:
  ##   /dgraph/backups
  ##   s3://s3.us-west-2.amazonaws.com/<bucketname>
  ##   minio://my-release-minio.default.svc:9000/<bucketname>
  destination: *nfs_backups_path
  ## subpath directory useful to store full and reclated incremental backuups
  ## in the same directory.
  ## NOTE: It is important to create directory name that matches the schedule.
  ##       For example, daily fulls and hourly incrementals, a directory could
  ##       be named dgraph_$(date +%Y%m%d)
  ## ref. `date` command: https://www.gnu.org/software/coreutils/manual/html_node/date-invocation.html#date-invocation
  subpath: dgraph_$(date +%Y%m%d)
  ## enable if minio service has https://
  minioSecure: false
  ## specify access keys required by MinIO or S3
  keys:
    minio:
      ## MINIO_ACCESS_KEY env var
      access: ""
      ## MINIO_SECRET_KEY env var
      secret: ""
    s3:
      ## AWS_ACCESS_KEY_ID env var
      access: ""
      ## AWS_SECRET_ACCESS_KEY env var
      secret: ""

global:
  domain: cluster.local
  ## Combined ingress resource for alpha and ratel services
  ## This will override existing ingress configurations under alpha and ratel
  ## This requires an ingress controller to be installed into your k8s cluster
  ingress:
    enabled: false
    ingressClassName: null
    annotations: {}
    tls: {}
    ratel_hostname: null
    alpha_hostname: null
  ingress_grpc:
    enabled: false
    ingressClassName: null
    annotations: {}
    tls: {}
    alpha_grpc_hostname: null
