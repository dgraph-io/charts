{{- /* Generate ingress path */}}
{{- define "path" -}}
  {{- $path := "/" -}}
  {{- if .Values.global.ingress.ingressClassName -}}
    {{- if eq .Values.global.ingress.ingressClassName "gce" "alb" "nsx" }}
      {{- $path = "/*" -}}
    {{- else }}
      {{- $path = "/" -}}
    {{- end }}
  {{- else if index $.Values.global.ingress "annotations" -}}
    {{- if eq (index $.Values.global.ingress.annotations "kubernetes.io/ingress.class" | default "") "gce" "alb" "nsx" }}
      {{- $path = "/*" -}}
    {{- else }}
      {{- $path = "/" -}}
    {{- end }}
  {{- end -}}
  {{- printf "%s" $path -}}
{{- end -}}
{{- /* Alpha ingress resource */}}
{{- if and (eq .Values.alpha.ingress.enabled true) (eq .Values.global.ingress.enabled false) -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "dgraph.alpha.fullname" . }}-ingress
  labels:
    app: {{ template "dgraph.name" . }}
    chart: {{ template "dgraph.chart" . }}
    component: {{ .Values.alpha.name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  {{- with .Values.alpha.ingress.annotations }}
  annotations:
    {{- toYaml . | trimSuffix "\n" | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.alpha.ingress.ingressClassName }}
  ingressClassName: {{ .Values.alpha.ingress.ingressClassName }}
{{- end }}
{{- if .Values.alpha.ingress.tls }}
  tls:
  {{- range .Values.alpha.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
    - http:
        paths:
          - backend:
              service:
                name:  {{ template "dgraph.alpha.fullname" . }}
                port:
                  number: 8080
            pathType: ImplementationSpecific
            path: {{ template "path" . }}
      {{- if .Values.alpha.ingress.hostname }}
      host: {{ .Values.alpha.ingress.hostname }}
      {{- end }}
{{- end }}
{{- /* Alpha grpc ingress resource */}}
{{- if and (eq .Values.alpha.ingress_grpc.enabled true) (eq .Values.global.ingress_grpc.enabled false) -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "dgraph.alpha.fullname" . }}-ingress-grpc
  labels:
    app: {{ template "dgraph.name" . }}
    chart: {{ template "dgraph.chart" . }}
    component: {{ .Values.alpha.name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  {{- with .Values.alpha.ingress_grpc.annotations }}
  annotations:
    {{- toYaml . | trimSuffix "\n" | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.alpha.ingress_grpc.ingressClassName }}
  ingressClassName: {{ .Values.alpha.ingress_grpc.ingressClassName }}
{{- end }}
{{- if .Values.alpha.ingress_grpc.tls }}
  tls:
  {{- range .Values.alpha.ingress_grpc.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
    - http:
        paths:
          - backend:
              service:
                name:  {{ template "dgraph.alpha.fullname" . }}
                port:
                  number: 9080
            pathType: ImplementationSpecific
            path: {{ template "path" . }}
      {{- if .Values.alpha.ingress_grpc.hostname }}
      host: {{ .Values.alpha.ingress_grpc.hostname }}
      {{- end }}
{{- end }}
